PyExZ3 (Python Symbolic Execution via Z3)
Running PyExZ3 on SE regression test suite
PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\test\se_descr.py
	name: execute
	code: def execute(self, **args):
	lineno: 88
	local variables: ['self', 'args']
	global variables: ['TESTS', 'test_dir', 'f', '__builtins__', '__file__', 'inspect', 'factory', '__package__', 'sys', 're', 'newInteger', 'SymExecApp', 'invocation', '__name__', 'os', '__doc__']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\test\se_descr.py
	name: execute
	code: return self.app.__dict__[self.test_name](**args)
	lineno: 89
	local variables: ['self', 'args']
	global variables: ['TESTS', 'test_dir', 'f', '__builtins__', '__file__', 'inspect', 'factory', '__package__', 'sys', 're', 'newInteger', 'SymExecApp', 'invocation', '__name__', 'os', '__doc__']

LocalRef(self).Attr(app).Attr(__dict__)[LocalRef(self).Attr(test_name)]
return args()
PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: hashval
	code: def hashval(key):
	lineno: 26
	local variables: ['key']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: hashval
	code: hv = compute(key)
	lineno: 27
	local variables: ['key']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

LocalRef(hv) = compute(LocalRef(key))
PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: compute
	code: def compute(x):
	lineno: 16
	local variables: ['x']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: compute
	code: res = 0
	lineno: 17
	local variables: ['x']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

LocalRef(res) = 0
PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: compute
	code: res = (res + x)
	lineno: 18
	local variables: ['x', 'res']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

LocalRef(res) = LocalRef(res) + LocalRef(x)
PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: compute
	code: res = (res + x)
	lineno: 18
	local variables: ['x', 'res']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: compute
	code: res = (res + x)
	lineno: 18
	local variables: ['x', 'res']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: hashval
	code: hv = compute(key)
	lineno: 27
	local variables: ['key']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\se_normalized\hashval.py
	name: hashval
	code: hv = compute(key)
	lineno: 27
	local variables: ['key']
	global variables: ['whichBranch', 'hashval', 'expected_result', 'compute', '__builtins__', '__file__', '__doc__', 'python_ord', '__name__', 'ord', '__package__', 'SeDict', 'se_ord']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\test\se_descr.py
	name: execute
	code: return self.app.__dict__[self.test_name](**args)
	lineno: 89
	local variables: ['self', 'args']
	global variables: ['TESTS', 'test_dir', 'f', '__builtins__', '__file__', 'inspect', 'factory', '__package__', 'sys', 're', 'newInteger', 'SymExecApp', 'invocation', '__name__', 'os', '__doc__']

PythonContext instance
	filename: C:\Users\tball\Documents\GitHub\PyExZ3\test\se_descr.py
	name: execute
	code: return self.app.__dict__[self.test_name](**args)
	lineno: 89
	local variables: ['self', 'args']
	global variables: ['TESTS', 'test_dir', 'f', '__builtins__', '__file__', 'inspect', 'factory', '__package__', 'sys', 're', 'newInteger', 'SymExecApp', 'invocation', '__name__', 'os', '__doc__']

